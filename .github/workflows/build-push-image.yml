# This workflow will perform a build and push of
# the image whenever there a code merge happens.
name: Build and Push Image
on:
  pull_request:
    branches: [ main ]
  push:
    workflow_dispatch:
    tags:
      - '*'
    branches:
      - main
    paths-ignore:
      - '**.md'
  schedule:
    - cron: "0 0 * * *" # every day at midnight

env:
  IMAGE_NAME: openshift-pipeline/must-gather
  IMAGE_REGISTRY: quay.io

jobs:
  build-and-push:
    name: Build and push must-gather image to Quay.io
    runs-on: ubuntu-latest
    steps:
      # Checkout must-gather github repository
      - name: Checkout must-gather repo
        uses: actions/checkout@v3
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          VERSION=latest
          SHORTREF=${GITHUB_SHA::8}

          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SHORTREF}"

          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
      # Setup qemu and buildx
      - name: Setup QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      # Auth on registry
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ secrets.QUAY_REGISTRY_USERNAME }}
          password: ${{ secrets.QUAY_REGISTRY_PASSWORD }}
      # Build image using buildx
      - name: Build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/ppc64le,linux/s390x
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
